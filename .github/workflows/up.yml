name: Auto Update Worker

on:
  push:
    branches:
      - main
  schedule:
    # 每天午夜 (UTC) 运行一次
    - cron: "0 0 * * *"
  workflow_dispatch:
    inputs:
      force_update:
        description: '是否强制更新 (忽略内容哈希检查)'
        required: false
        default: 'false'

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest
    env:
      REPO_OWNER: "bia-pain-bache"
      REPO_NAME: "BPB-Worker-Panel"
      TARGET_FILE: "worker.zip"
    outputs:
      updated: ${{ steps.check_update_step.outputs.updated }}
      new_tag: ${{ steps.check_update_step.outputs.remote_tag }}

    steps:
      - name: 检出仓库
        uses: actions/checkout@v4

      - name: 检查并更新 Worker (基于文件哈希)
        id: check_update_step
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -eo pipefail # 任何命令失败则立即退出

          log() { echo "[$(date +'%Y-%m-%d %H:%M:%S')] $1"; }

          log "开始基于文件哈希检查更新..."
          # 设定默认输出
          echo "updated=false" >> $GITHUB_OUTPUT
          echo "remote_tag=N/A" >> $GITHUB_OUTPUT
          echo "release_notes=No new release notes." >> $GITHUB_OUTPUT

          # --- 1. 获取最新 Release 的信息 ---
          LATEST_RELEASE_URL="https://api.github.com/repos/${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}/releases/latest"
          log "获取最新 Release 信息 از: $LATEST_RELEASE_URL"

          RESPONSE=$(curl -s --retry 3 -L \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "$LATEST_RELEASE_URL")

          if echo "$RESPONSE" | jq -e '.message' > /dev/null; then
            log "ERROR: GitHub API 返回错误: $(echo "$RESPONSE" | jq -r '.message')"
            exit 1
          fi

          DOWNLOAD_URL=$(echo "$RESPONSE" | jq -r '.assets[] | select(.name == "'"$TARGET_FILE"'") | .browser_download_url')
          REMOTE_TAG_FOR_LOG=$(echo "$RESPONSE" | jq -r '.tag_name')

          if [ -z "$DOWNLOAD_URL" ] || [ "$DOWNLOAD_URL" == "null" ]; then
            log "ERROR: 在最新 Release ($REMOTE_TAG_FOR_LOG) 中未找到目标文件 '$TARGET_FILE'"
            exit 1
          fi

          # --- 2. 比较文件哈希值 ---
          LOCAL_HASH=""
          if [ -f "${{ env.TARGET_FILE }}" ]; then
            LOCAL_HASH=$(sha256sum "${{ env.TARGET_FILE }}" | awk '{print $1}')
            log "本地文件哈希: $LOCAL_HASH"
          else
            log "本地文件 '${{ env.TARGET_FILE }}' 不存在，将直接下载。"
          fi

          REMOTE_TEMP_FILE=$(mktemp)
          wget --quiet -O "$REMOTE_TEMP_FILE" "$DOWNLOAD_URL"
          REMOTE_HASH=$(sha256sum "$REMOTE_TEMP_FILE" | awk '{print $1}')
          log "远程文件哈希: $REMOTE_HASH"

          # --- 3. 判断是否需要更新 ---
          FORCE_UPDATE="${{ github.event.inputs.force_update || 'false' }}"
          log "强制更新: $FORCE_UPDATE"

          if [ "$LOCAL_HASH" = "$REMOTE_HASH" ] && [ "$FORCE_UPDATE" != "true" ]; then
            log "文件内容未发生变化 (哈希值相同)，无需更新。"
            rm "$REMOTE_TEMP_FILE"
            exit 0
          fi

          # --- 4. 执行更新 ---
          if [ "$FORCE_UPDATE" = "true" ]; then
            log "强制更新已触发。"
          else
            log "检测到文件内容更新 (哈希值不同)。"
          fi

          log "正在用新文件替换旧文件..."
          mv "$REMOTE_TEMP_FILE" "${{ env.TARGET_FILE }}"

          log "解压 ${{ env.TARGET_FILE }}..."
          unzip -o "${{ env.TARGET_FILE }}"

          # --- 5. 设置输出，供提交步骤使用 ---
          log "更新完成！正在准备提交信息..."
          REMOTE_TAG=$(echo "$RESPONSE" | jq -r '.tag_name')
          RELEASE_NOTES=$(echo "$RESPONSE" | jq -r '.body')

          echo "updated=true" >> $GITHUB_OUTPUT
          echo "remote_tag=$REMOTE_TAG" >> $GITHUB_OUTPUT

          # 使用 Heredoc 格式安全地传递多行的 Release Notes
          echo "release_notes<<EOF" >> $GITHUB_OUTPUT
          echo "$RELEASE_NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT


      - name: 提交并推送更改
        if: steps.check_update_step.outputs.updated == 'true'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: |
            🔄 自动同步 Worker 至 ${{ steps.check_update_step.outputs.remote_tag }}

            ${{ steps.check_update_step.outputs.release_notes }}
          commit_author: "github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>"
          file_pattern: .
